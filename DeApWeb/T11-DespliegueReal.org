#+Title: Despliegue REAL

* Introducción
En esta ocasión toda llevar a la práctica real un todo lo aprendido en lo que llevamos de curso.

Para ello deberemos tener acceso desde cualquier parte del mundo (inicialmente) a vuestro proxy inverso que derivará entre el dominio principal y uno secundario según se solicite.

Como ya sabéis tenemos diversas opciones para ponerlo en marcha, la primera de ellas será siempre un VPS, bien Oracle Cloud Free o cualquier otro gratuito o de pago que os guste más.

Si bien algunos podéis encontraros perdidos podremos realizarlo también a través de nuestra conexión privada si disponéis de acceso al router para su configuración.

* Opción VPS:
1. Deberéis crear una instancia, elegir el S.O. y dar acceso a los puertos 80 y 443 a dicha instancia.
2. Disponer de un dominio o subdominio delegado. Recomendable ~duckdns.org~ por ser gratuito, p.e. ~nombre-alumno.duckdns.org~
3. Una vez realizado ésto, sólo deberéis reproducir la práctica 9 comprobando que podéis acceder sin problema al dominio principal y al secundario, p.e. ~nombre-alumno.duckdns.org~ y ~dominioSecundario.nombre-alumno.duckdns.org~

/Recuerda: el acceso a se realizará con las direcciones gestionadas por ~caddy~ por lo que una vez que os aseguréis que los distintos nginx están trabajando y sirviendo correctamente deberéis cerrarles el puerto al exterior (aunque en realidad no tendrán entrada al no estar abiertos en el firewall)./

* Opción Conexión con medios propios
En esta ocasión utilizaremos la utilidad ~upnpc~ que hace uso del protocolo ~UPnP~ para gestionar remotamente el router doméstico.
1. Activar el protocolo ~UPnP~ en el router. P.e.:
	[[./T11-DespliegueReal/upnpc.png]]

2. Instalar ~upnpc~

3. Verificar estado del servicio

4. Abrir puerto 80 y 443

5. Verifica el nuevo estado

A partir de aquí, podremos continuar los pasos 2 y 3 de la opción VPS

* Despliegue con GIT
Vale, ya tenemos VPS, y ¿ahora como desplegamos?
1. [[https://hardfloat.es/blog/2021/03/23/desplegar-aplicaciones-con-git.html][GIT]]
2. SFTP (SSH disfrazado de ftp)
    1.*rsync*:
    Transfer files either to or from a remote host (not between two remote hosts). Can transfer single files, or multiple files matching a pattern.More information: https://manned.org/rsync.
    #+BEGIN_QUOTE:
     - Transfer file from local to remote host:
       rsync {{path/to/local_file}} {{remote_host}}:{{path/to/remote_directory}}

     - Transfer file from remote host to local:
       rsync {{remote_host}}:{{path/to/remote_file}} {{path/to/local_directory}}

     - Transfer file in [a]rchive (to preserve attributes) and compressed ([z]ipped) mode with [v]erbose and [h]uman-readable [P]rogress:
       rsync -azvhP {{path/to/local_file}} {{remote_host}}:{{path/to/remote_directory}}

     - Transfer a directory and all its children from a remote to local:
       rsync -r {{remote_host}}:{{path/to/remote_directory}} {{path/to/local_directory}}

     - Transfer directory contents (but not the directory itself) from a remote to local:
       rsync -r {{remote_host}}:{{path/to/remote_directory}}/ {{path/to/local_directory}}

     - Transfer a directory [r]ecursively, in [a]rchive to preserve attributes, resolving contained soft[l]inks , and ignoring already transferred files [u]nless newer:
       rsync -rauL {{remote_host}}:{{path/to/remote_directory}} {{path/to/local_directory}}

     - Transfer file over SSH and delete remote files that do not exist locally:
       rsync -e ssh --delete {{remote_host}}:{{path/to/remote_file}} {{path/to/local_file}}

     - Transfer file over SSH using a different port than the default and show global progress:
       rsync -e 'ssh -p {{port}}' --info=progress2 {{remote_host}}:{{path/to/remote_file}} {{path/to/local_file}}
    #+END_QUOTE

    2. *scp* (sólo para primer despliegue): \\
    Secure copy.Copy files between hosts using Secure Copy Protocol over SSH.More information: https://man.openbsd.org/scp.
    #+BEGIN_QUOTE:
    - Copy a local file to a remote host:
      scp {{path/to/local_file}} {{remote_host}}:{{path/to/remote_file}}

    - Use a specific port when connecting to the remote host:
      scp -P {{port}} {{path/to/local_file}} {{remote_host}}:{{path/to/remote_file}}

    - Copy a file from a remote host to a local directory:
      scp {{remote_host}}:{{path/to/remote_file}} {{path/to/local_directory}}

    - Recursively copy the contents of a directory from a remote host to a local directory:
      scp -r {{remote_host}}:{{path/to/remote_directory}} {{path/to/local_directory}}

    - Copy a file between two remote hosts transferring through the local host:
      scp -3 {{host1}}:{{path/to/remote_file}} {{host2}}:{{path/to/remote_directory}}

    - Use a specific username when connecting to the remote host:
      scp {{path/to/local_file}} {{remote_username}}@{{remote_host}}:{{path/to/remote_directory}}

    - Use a specific ssh private key for authentication with the remote host:
      scp -i {{~/.ssh/private_key}} {{local_file}} {{remote_host}}:{{/path/remote_file}}
    #+EDN_QUOTE

3. FTP:

 *NO* estamos en los 90. Ya nadie despliegua por ftp.

 Si tu servidor sólo dispone de ftp es hora de buscar otro servidor... pero como siempre hay algún sitio ~legacy~ donde nos obligan a trabajar por [[https://github.com/git-ftp/git-ftp][git-ftp]].


* PRACTICA
Entrega: Para la entrega deberéis documentar el proyecto y añadir el enlace vuesto dominio (o subdominio).

Plazo: 30 de enero.

* Notas:
Disponéis de archivos auxiliares en el directorio T11-DespliegueReal
