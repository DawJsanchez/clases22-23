# ---------------------------------------------------------------
#     Receta para levantar:
#  + un servidor MariaDB
#  + un servidor PostgreSQL
#  + un cliente ligero Adminer (postgreSQL y MariaDB)
#  - (PDTE) un cliente pesado PHPMyAdmin (sólo MariaDB)
#
# Recuerda:
#  + Para levantar los contenedores: `docker-compose up -d`
#  + Para destruir los contenedores: `docker-compose down`
#  + Para verificar si funcionan: `docker-compose ps`
#  + Para ver los logs del sistema: `docker-compose logs`
# ---------------------------------------------------------------
version: '3.1'

services:
  mariaDB:
    container_name: mariaDB
    image: mariadb:10.11
    # Mantener versiones LTS 10.11 hasta 2028
    # https://mariadb.org/about/#maintenance-policy
    restart: always
    environment:
      TZ: 'Europe/Madrid'
      MARIADB_ROOT_PASSWORD: ${passRoot}
      MARIADB_DATABASE: ${db}
      MARIADB_USER: ${user}
      MARIADB_PASSWORD: ${pass}
# Deberéis crear un archivo denominado .env con las credenciales
# passRoot=password_de_root
# db=nombre_de_DB
# user=nombre_usuario
# pass=pass_de_usuario
    volumes:
      - ./MySQL:/var/lib/mysql
    ports:
      - 3306:3306
# Si tenéis conflictos con XAMPP o lo que sea sólo tenéis que cambiar 
# el número de la izquierda de los dos puntos. Por ejemplo: 
#    - 13306:3306
# Luego accederéis por ese puerto desde vuestro cliente de BBDD


  postgreSQL:
    image: postgres
    container_name: postgreSQL
    restart: always
    environment:
# Variable pasada en archivo .env
      #POSTGRES_PASSWORD: ${PASS}
# Pass a través de archivo
      POSTGRES_PASSWORD_FILE: /.pass
      PGDATA: /var/lib/postgresql/data/pgdata
      LANG: es_ES.utf8
      POSTGRES_INITDB_ARGS: "--locale-provider=icu --icu-locale=es-ES"
    volumes:
# Vinculamos archivo .pass del HOST con el espejo del CONTENEDOR
      - ./.pass:/.pass
      - ./data15:/var/lib/postgresql/data
    ports:
# Vinculamos puerto del HOST con el puerto del CONTENEDOR 
      - 5432:5432
    networks:
      - postgre

  adminer:
    image: adminer
    restart: always
    ports:
# Publicamos adminer en puerto 80. Si está ocupado deberemos mover el número de la izquierda.
      - 80:8080
    networks:
      - postgre


networks:
   postgre:
      driver: bridge
